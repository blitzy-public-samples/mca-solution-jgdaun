# Nginx version: 1.21.3
# Purpose: Production-grade Nginx configuration implementing reverse proxy, load balancing,
# rate limiting, and security measures for the application services.

# Main context configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context - Optimized for high concurrency
events {
    # Implements requirement from network_architecture for efficient request handling
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# HTTP context configuration
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enhanced logging format with request timing
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'
                    '$request_time';

    # Logging configuration
    access_log /var/log/nginx/access.log main buffer=16k;
    error_log /var/log/nginx/error.log warn;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # SSL configuration implementing network security requirements
    ssl_protocols TLSv1.2 TLSv1.3;  # Enforce modern TLS versions
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Backend upstream configuration with least connections load balancing
    upstream backend {
        least_conn;  # Load balancing algorithm
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Frontend upstream configuration
    upstream frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server configuration
    server {
        listen [::]:443 ssl http2;
        server_name _;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers implementing security requirements
        add_header Strict-Transport-Security 'max-age=31536000' always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection '1; mode=block';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";

        # API location with rate limiting implementation
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Proxy buffer settings for large responses
            proxy_buffering off;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 300;

            # Rate limiting implementation based on technical requirements
            limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
            limit_req zone=api_limit burst=20 nodelay;
        }

        # Frontend location configuration
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}