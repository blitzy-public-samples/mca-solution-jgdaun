# Kubernetes version: 1.21
# AWS KMS version: 2.0
# AWS Secrets Manager version: 2.0

# This secrets configuration implements:
# 1. AES-256 encryption at rest
# 2. AWS KMS integration for key management
# 3. Field-level encryption for sensitive data
# 4. Secure access control through RBAC
# 5. Integration with AWS Secrets Manager

---
# Backend service secrets
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: default
  annotations:
    # AWS KMS key for envelope encryption
    kubernetes.io/aws-kms-key-id: "arn:aws:kms:region:account:key/key-id"
    kubernetes.io/created-by: "secrets-manager-operator"
    # Enable automatic rotation through AWS Secrets Manager
    secrets-manager.aws.amazon.com/rotation-enabled: "true"
    secrets-manager.aws.amazon.com/rotation-interval: "30d"
  labels:
    app: mca-processor
    environment: production
    managed-by: aws-secrets-manager
    encryption: aes256
type: Opaque
data:
  # Database credentials
  DB_PASSWORD: ${DB_PASSWORD}  # Base64 encoded and KMS encrypted
  REDIS_PASSWORD: ${REDIS_PASSWORD}  # Base64 encoded and KMS encrypted
  MONGODB_URI: ${MONGODB_URI}  # Base64 encoded and KMS encrypted
  
  # API and authentication secrets
  API_KEY: ${API_KEY}  # Base64 encoded and KMS encrypted
  JWT_SECRET: ${JWT_SECRET}  # Base64 encoded and KMS encrypted
  WEBHOOK_SECRET: ${WEBHOOK_SECRET}  # Base64 encoded and KMS encrypted
  
  # AWS credentials
  AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}  # Base64 encoded and KMS encrypted
  AWS_SECRET_KEY: ${AWS_SECRET_KEY}  # Base64 encoded and KMS encrypted
  
  # Service-specific secrets
  EMAIL_SERVICE_PASSWORD: ${EMAIL_SERVICE_PASSWORD}  # Base64 encoded and KMS encrypted
  ENCRYPTION_KEY: ${ENCRYPTION_KEY}  # Base64 encoded and KMS encrypted
  S3_BUCKET_NAME: ${S3_BUCKET_NAME}  # Base64 encoded and KMS encrypted

---
# OCR service secrets
apiVersion: v1
kind: Secret
metadata:
  name: ocr-secrets
  namespace: default
  annotations:
    kubernetes.io/aws-kms-key-id: "arn:aws:kms:region:account:key/key-id"
    kubernetes.io/created-by: "secrets-manager-operator"
    secrets-manager.aws.amazon.com/rotation-enabled: "true"
    secrets-manager.aws.amazon.com/rotation-interval: "30d"
  labels:
    app: mca-processor
    component: ocr-service
    environment: production
    managed-by: aws-secrets-manager
    encryption: aes256
type: Opaque
data:
  # OCR service specific secrets
  OCR_API_KEY: ${OCR_API_KEY}  # Base64 encoded and KMS encrypted
  
  # AWS credentials for OCR service
  AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}  # Base64 encoded and KMS encrypted
  AWS_SECRET_KEY: ${AWS_SECRET_KEY}  # Base64 encoded and KMS encrypted

---
# AWS KMS encryption configuration
apiVersion: v1
kind: Secret
metadata:
  name: kms-encryption-config
  namespace: default
  annotations:
    kubernetes.io/created-by: "secrets-manager-operator"
  labels:
    app: mca-processor
    environment: production
    managed-by: aws-secrets-manager
type: Opaque
data:
  # KMS configuration for envelope encryption
  kms-key-id: ${KMS_KEY_ID}  # Base64 encoded
  kms-region: ${KMS_REGION}  # Base64 encoded
  kms-endpoint: ${KMS_ENDPOINT}  # Base64 encoded

---
# Secrets Manager configuration
apiVersion: v1
kind: Secret
metadata:
  name: secrets-manager-config
  namespace: default
  annotations:
    kubernetes.io/created-by: "secrets-manager-operator"
  labels:
    app: mca-processor
    environment: production
    managed-by: aws-secrets-manager
type: Opaque
data:
  # AWS Secrets Manager configuration
  secrets-manager-region: ${SECRETS_MANAGER_REGION}  # Base64 encoded
  secrets-manager-endpoint: ${SECRETS_MANAGER_ENDPOINT}  # Base64 encoded
  secrets-manager-role-arn: ${SECRETS_MANAGER_ROLE_ARN}  # Base64 encoded